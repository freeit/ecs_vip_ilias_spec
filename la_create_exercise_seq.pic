.PS
copy "sequence.pic";

movewid = 1;
maxpsht = 15;
maxpswid = 15;
spacing = 0.2;

# Define objects
placeholder_object(L);
object(E,":ECS");
placeholder_object(B);
object(I,"Ilias:LMS");
actor(A,"");
step();

# Message sequences

message(A,I,"create/edit exercise");
active(I);

message(I,E,"subpid,cookie:=POST>Applet:sys/subparticipants")
active(E)
message(I,E,"exid:=POST>Applet:vip/exercises");
step();inactive(E);step()

create_message(I,L,"Lecturer:Applet");
oconstraint("params:ecsurl,cookie,iliasmid,compmid,exres,solres,resres,exid");

create_message(I,B,"Save:Button");
inactive(I);
message(L,E,"exercise:=GET:vip/exercises/<exid>");
active(L); active(E);
step();
inactive(L); inactive(E);
step();
message(A,L,"composing and testing exercise");
active(L);step();inactive(L);

message(A,B,"save exercise");
active(B);
step();
message(B,L,"viplab.getLoadedExercise()");
active(L);
rmessage(L,B,"exercise");
inactive(L); delete(L);
rmessage(B,I,"exercise");
comment(B,,down .4 right, wid 1.5 ht .5 "exercise embedded" "into hidden field");
inactive(B); delete(B);

active(I);
step();
message(I,I,"storing additional metadata into exercise");
step();
message(I,I,"storing exercise into pool");

message(I,E,"DELETE:sys/subparticipants/<subpid>");
active(E)
message(I,E,"DELETE:vip/exercises/<exid>");
step();inactive(E);

# Complete the lifelines
step();
complete(I);
complete(E);
complete(A);
.PE

