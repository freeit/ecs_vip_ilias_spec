.PS
copy "sequence.pic";

movewid = 1;
maxpsht = 15;
maxpswid = 15;
spacing = 0.2;

# Define objects
placeholder_object(S);
object(E,":ECS");
placeholder_object(B);
object(I,"Ilias:LMS");
actor(A,"");
step();

# Message sequences

message(A,I,"solve exercise");
active(I);

message(I,E,"subpid,EcsAuthId:=POST:/sys/subparticipants")
active(E)
message(I,E,"exid:=POST:/cc/vip_exercises");
step();inactive(E);step()

create_message(I,S,"Lecturer:Applet");
oconstraint("params:ecsurl,EcsAuthId,iliasmid,compmid,exres,solres,resres,exid");

create_message(I,B,"SolutionSave:Button");
inactive(I);
message(S,E,"exercise:=GET:/cc/vip_exercises/<exid>");
active(S); active(E);
step();
inactive(S); inactive(E);
step();
message(A,S,"find/compute solution");
active(S); step(); inactive(S);

message(A,B,"save solution");
active(B);
step();
message(B,S,"applet#saveSolution()");
active(S);
rmessage(S,B,"solution+result");
inactive(S); delete(S);
rmessage(B,I,"solution+result");
comment(B,,down .4 right .1, wid 1.8 ht .5 "solution+result embedded" "into hidden field");
inactive(B); delete(B);
step()

active(I);
step();
message(I,I,"storing solution+result");

message(I,E,"DELETE:/sys/subparticipants/<subpid>");
active(E)
message(I,E,"DELETE:/cc/vip_exercises/<exid>");
step();inactive(E);

# Complete the lifelines
step();
complete(I);
complete(E);
complete(A);
.PE

